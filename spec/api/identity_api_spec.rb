=begin
#API References

#The **Phyllo API** is built on RESTful principles and returns JSON encoded responses and accepts JSON payloads. It is only available through HTTPS to ensure the security of the data in transfer. These APIs must be called only from your server and never from your app / frontend as this is a security concern.  The API operates in three environments: **sandbox**, **staging** and **production**.  The sandbox environment returns mock data and is used for testing the basic functionality of the system.  The staging environment is exactly like a production environment but with certain limitations. It is used for your internal testing and development purposes.  The production environment connects to real platform accounts and all data reads and writes are made to live accounts. This is what you would use to get data for your customers.

The version of the OpenAPI document: v1.0
Contact: support@getphyllo.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Phyllo::IdentityApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'IdentityApi' do
  before do
    # run before each test
    @api_instance = Phyllo::IdentityApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IdentityApi' do
    it 'should create an instance of IdentityApi' do
      expect(@api_instance).to be_instance_of(Phyllo::IdentityApi)
    end
  end

  # unit tests for v1_get_audience_demographics
  # Retrieve audience demographics
  # Retrieves audience demographics for the given account. Demographics object contains information related to the audience of the user: countries, cities, age &amp; gender distribution, etc. The values in this data are in percentages and are tied to a particular work platform account. This data is lifetime data.
  # @param account_id Unique ID of the connected account.
  # @param [Hash] opts the optional parameters
  # @return [V1GetAudienceDemographics200Response]
  describe 'v1_get_audience_demographics test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_refresh_profile
  # Refresh a profile
  # Refresh profile for a connected account. Once Phyllo processes the request, you can fetch the updated profile by calling the [retrieve a profile API](../reference/openapi.v1.yml/paths/~1v1~1profiles~1{id}/get).   Subscribe to the \&quot;PROFILES.UPDATED\&quot; webhook to receive a notification once the request is completed.
  # @param [Hash] opts the optional parameters
  # @option opts [Refresh1] :refresh1 
  # @return [Refresh1]
  describe 'v1_refresh_profile test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_stream_get_profile_by_id
  # Retrieve a profile
  # Retrieve the information of the Profile with the supplied Profile id. Profile object contains information related to the identity of the user like name, address, contact details, etc. The data in a profile is tied to a particular work platform account that the user has connected to via Connect SDK.
  # @param id Unique identifier for the profile.
  # @param [Hash] opts the optional parameters
  # @return [Profile1]
  describe 'v1_stream_get_profile_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_stream_get_profiles
  # Retrieve all profiles
  # Lists all Profiles. Profile object contains information related to the identity of the user like name, address, contact details, etc. The data in a profile is tied to a particular work platform account that the user has connected to via Connect SDK.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The number of objects to skip. Use this argument for pagination. The default value is 0.
  # @option opts [Integer] :limit The number of objects to be returned. It can be between 1 to 100. The default value is 10.
  # @option opts [String] :account_id Unique ID of the connected account.
  # @option opts [String] :work_platform_id Unique ID of the work platform.
  # @option opts [String] :user_id Unique ID of the user.
  # @return [ProfileList1]
  describe 'v1_stream_get_profiles test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
