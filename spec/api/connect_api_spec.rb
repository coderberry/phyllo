=begin
#API References

#The **Phyllo API** is built on RESTful principles and returns JSON encoded responses and accepts JSON payloads. It is only available through HTTPS to ensure the security of the data in transfer. These APIs must be called only from your server and never from your app / frontend as this is a security concern.  The API operates in three environments: **sandbox**, **staging** and **production**.  The sandbox environment returns mock data and is used for testing the basic functionality of the system.  The staging environment is exactly like a production environment but with certain limitations. It is used for your internal testing and development purposes.  The production environment connects to real platform accounts and all data reads and writes are made to live accounts. This is what you would use to get data for your customers.

The version of the OpenAPI document: v1.0
Contact: support@getphyllo.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Phyllo::ConnectApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ConnectApi' do
  before do
    # run before each test
    @api_instance = Phyllo::ConnectApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConnectApi' do
    it 'should create an instance of ConnectApi' do
      expect(@api_instance).to be_instance_of(Phyllo::ConnectApi)
    end
  end

  # unit tests for v1_connect_get_users
  # Retrieve all users
  # Lists all Users.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The number of objects to be returned. It can be between 1 to 100. The default value is 10.
  # @option opts [Integer] :offset The number of objects to skip. Use this argument for pagination. The default value is 0.
  # @return [UserResponseList1]
  describe 'v1_connect_get_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_connect_get_users_by_external_id
  # Retrieve a user by external ID
  # Retrieve the information of the User with the supplied External id.
  # @param external_id Unique ID for the user supplied by you
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'v1_connect_get_users_by_external_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_connect_get_users_by_id
  # Retrieve a user
  # Retrieve the information of the User with the supplied User id.
  # @param id Unique identifier for the user.
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'v1_connect_get_users_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_connect_get_work_platforms
  # Retrieve all work platforms
  # Lists all Work Platforms.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Only return objects with the name provided.
  # @option opts [Integer] :limit The number of objects to be returned. It can be between 1 to 100. The default value is 10.
  # @option opts [Integer] :offset The number of objects to skip. Use this argument for pagination. The default value is 0.
  # @return [WorkPlatformList1]
  describe 'v1_connect_get_work_platforms test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_connect_get_work_platforms_by_id
  # Retrieve a work platform
  # Retrieves the information of the Work Platform object with the supplied Work Platform id.
  # @param id Unique identifier for the work platform.
  # @param [Hash] opts the optional parameters
  # @return [WorkPlatform1]
  describe 'v1_connect_get_work_platforms_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_connect_post_sdk_tokens
  # Create an SDK token
  # Creates the Connect SDK Token. This is required while initializing the Connect SDK.
  # @param [Hash] opts the optional parameters
  # @option opts [SDKTokenRequest1] :sdk_token_request1 
  # @return [SDKTokenResponse1]
  describe 'v1_connect_post_sdk_tokens test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_connect_post_users
  # Create a user
  # Create a User.
  # @param [Hash] opts the optional parameters
  # @option opts [UserRequest1] :user_request1 
  # @return [User]
  describe 'v1_connect_post_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_disconnect_account_by_id
  # Disconnect an account
  # Disconnect the supplied account id. An Account represents the user account on the work platform end.
  # @param id Unique identifier for the account.
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :body Empty JSON
  # @return [DisconnectAccountResponse1]
  describe 'v1_disconnect_account_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_stream_get_accounts
  # Retrieve all accounts
  # Lists all Accounts. An Account represents the user account on the work platform end. A user can connect multiple account in the same or across multiple work platforms.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset The number of objects to skip. Use this argument for pagination. The default value is 0.
  # @option opts [Integer] :limit The number of objects to be returned. It can be between 1 to 100. The default value is 10.
  # @option opts [String] :work_platform_id Unique ID of the work platform.
  # @option opts [String] :user_id Unique ID of the user.
  # @return [AccountList1]
  describe 'v1_stream_get_accounts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for v1_stream_get_accounts_by_id
  # Retrieve an account
  # Retrieve the information of the Account with the supplied Account id. An Account represents the user account on the work platform end. A user can connect multiple account in the same or across multiple work platforms.
  # @param id Unique identifier for the account.
  # @param [Hash] opts the optional parameters
  # @return [Account1]
  describe 'v1_stream_get_accounts_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
